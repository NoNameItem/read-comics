# Generated by Django 3.2.9 on 2021-12-07 03:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("volumes", "0012_alter_volume_id"),
        ("people", "0007_alter_person_id"),
        ("locations", "0010_alter_location_id"),
        ("publishers", "0007_alter_publisher_id"),
        ("objects", "0009_alter_object_id"),
        ("story_arcs", "0011_alter_storyarc_id"),
        ("characters", "0010_alter_character_id"),
        ("concepts", "0009_alter_concept_id"),
        ("teams", "0010_alter_team_id"),
    ]

    operations = [
        migrations.CreateModel(
            name="IgnoredIssue",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("comicvine_id", models.IntegerField(unique=True)),
                ("comicvine_url", models.URLField(max_length=1000, null=True)),
                ("volume_comicvine_id", models.IntegerField(unique=True)),
                ("volume_comicvine_url", models.URLField(max_length=1000, null=True)),
                ("publisher_name", models.TextField()),
                ("volume_name", models.TextField()),
                ("volume_start_year", models.IntegerField(null=True)),
                ("name", models.TextField(null=True)),
                ("number", models.CharField(max_length=10, null=True)),
                ("cover_date", models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="IgnoredVolume",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("comicvine_id", models.IntegerField(unique=True)),
                ("comicvine_url", models.URLField(max_length=1000, null=True)),
                ("publisher_name", models.TextField()),
                ("name", models.TextField()),
                ("start_year", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="MissingIssue",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("comicvine_id", models.IntegerField(unique=True)),
                ("comicvine_url", models.URLField(max_length=1000, null=True)),
                ("name", models.TextField(null=True)),
                ("number", models.CharField(max_length=10, null=True)),
                ("cover_date", models.DateField(null=True)),
                ("volume_comicvine_id", models.IntegerField(unique=True)),
                ("volume_comicvine_url", models.URLField(max_length=1000, null=True)),
                ("volume_name", models.TextField()),
                ("volume_start_year", models.IntegerField(null=True)),
                ("publisher_name", models.TextField()),
                ("publisher_comicvine_id", models.IntegerField()),
                ("characters", models.ManyToManyField(related_name="missing_issues", to="characters.Character")),
                ("concepts", models.ManyToManyField(related_name="missing_issues", to="concepts.Concept")),
                ("locations", models.ManyToManyField(related_name="missing_issues", to="locations.Location")),
                ("objects_in", models.ManyToManyField(related_name="missing_issues", to="objects.Object")),
                ("people", models.ManyToManyField(related_name="missing_issues", to="people.Person")),
                (
                    "publisher",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="missing_issues",
                        to="publishers.publisher",
                    ),
                ),
                ("story_arcs", models.ManyToManyField(related_name="missing_issues", to="story_arcs.StoryArc")),
                ("teams", models.ManyToManyField(related_name="missing_issues", to="teams.Team")),
                (
                    "volume",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="missing_issues",
                        to="volumes.volume",
                    ),
                ),
            ],
        ),
    ]
