name: Release

permissions:
  checks: write

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  push:
    branches: "main"
    paths-ignore: [ "docs/**" ]

jobs:
  qa:
    uses: ./.github/workflows/qa.yml
  publish_reports:
    uses: ./.github/workflows/publish_reports.yml
    if: success() || failure()
    needs: qa
    with:
      publish_test_report: false
    secrets: inherit

#  build:
#    needs: [ flake8, test, pylint, sonarcloud ]
#    runs-on: ubuntu-latest
#    if: (github.ref == 'refs/heads/main') && github.event_name == 'push'
#
#    steps:
#      - name: Checkout master
#        uses: actions/checkout@v2
#
#      - name: Build container image
#        run: docker-compose -f production-build.yml build
#
#      - name: Yandex Cloud CR "Login" Action for GitHub Actions
#        uses: yc-actions/yc-cr-login@v0.1-alpha
#        with:
#          yc-sa-json-credentials: ${{ secrets.YC_SECRET }}
#
#      - name: Push image to Yandex Cloud Container Registry
#        run: docker-compose -f production-build.yml push
#
#  release:
#    needs: [ flake8, test, pylint, sonarcloud ]
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push' && github.ref_type == 'tag'
#
#    steps:
#      - name: Get version
#        id: get_version
#        run: |
#          echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
#          echo ${{ env.VERSION }}
#
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: Generate changes file
#        uses: sarnold/gitchangelog-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN}}
#
#      - name: Create release
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.VERSION }}
#          name: Release ${{ env.VERSION }}
#          body_path: CHANGES.md
#          draft: true
#          prerelease: false
#
#      - uses: actions/checkout@v2
#      - name: Create Sentry release
#        uses: getsentry/action-release@v1
#        env:
#          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
#          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
#        with:
#          environment: production
#          version: ${{ env.VERSION }}
#
#  deploy:
#    runs-on: ubuntu-latest
#    if: (github.ref == 'refs/heads/main') && github.event_name == 'push'
#    needs: build
#
#    steps:
#      - name: Deploy to Digital Ocean droplet via SSH action
#        uses: appleboy/ssh-action@v0.1.3
#        with:
#          HOST: ${{ secrets.HOST }}
#          USERNAME: ${{ secrets.USERNAME }}
#          KEY: ${{ secrets.SSHKEY }}
#          script: |
#            cd ~/read_comics
#            export PATH="$PATH:/home/docker/yandex-cloud/bin"
#            docker-compose -f production-run.yml pull
#            docker-compose -f production-run.yml down
#            docker-compose -f production-run.yml up -d --scale celeryworker=5 --force-recreate
