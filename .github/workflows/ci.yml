name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "master", "main", "develop" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main", "develop" ]
    paths-ignore: [ "docs/**" ]


jobs:
  linter:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Run all pre-commit hooks on all the files.
      # Getting only staged files can be tricky in case a new PR is opened
      # since the action is run on a branch in detached head state
      - name: Install and Run Pre-commit
        uses: pre-commit/action@v2.0.3

  # With no caching at all the entire ci process takes 4m 30s to complete!
  test:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Build the Stack
        run:  docker-compose -f local.yml build

      - name: Run DB Migrations
        run:  docker-compose -f local.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run: |
          docker-compose -f local.yml run --rm django coverage run -m pytest
          docker-compose -f local.yml run --rm django coverage xml

      - name: Publish coverage to Code Climate
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        with:
          coverageCommand: docker-compose -f local.yml run --rm django coverage xml

      - name: Tear down the Stack
        run:  docker-compose -f local.yml down

  build:
    needs: [linter, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_name == 'main'

    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Build container image
        run: docker-compose -f production-build.yml build

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker-compose -f production-build.yml push

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_name == 'main'
    needs: build

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.SSHKEY }}
          script: |
            cd ~/read_comics
            docker-compose -f production-run.yml pull
            docker-compose -f production-run.yml down
            docker-compose -f production-run.yml up -d --scale celeryworker=5 --force-recreate
