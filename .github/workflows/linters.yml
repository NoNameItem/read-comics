name: Linters

on:
  workflow_call:
    inputs:
      silent_linters:
        description: Linters don't fail jobs, checking only via sonarcloud quality gate
        default: false
        type: boolean
        required: false

jobs:
  flake8:
    name: Flake8
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate .django_unsafe
        run: |
          touch .envs/.local/.django_unsafe
          echo "DO_SPACE_DATA_KEY=test" >> .envs/.local/.django_unsafe
          echo "DO_SPACE_DATA_SECRET=test" >> .envs/.local/.django_unsafe
          echo "COMICVINE_API_KEYS=test" >>  .envs/.local/.django_unsafe

      - name: Build the Stack
        run: docker compose -f local.yml build

      - name: set pipefail
        run: set -o pipefail

      - name: Run flake8 silent
        if: ${{ inputs.silent_linters }}
        run: docker compose -f local.yml run --rm django flake8 --count | tee flake8.txt

      - name: Run flake8
        if: ${{ !inputs.silent_linters }}
        run: |
          set -o pipefail
          docker compose -f local.yml run --rm django flake8 --count | tee flake8.txt

      - name: Upload flake8 report
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: flake8_report
          path: flake8.txt

      - name: Tear down the Stack
        if: success() || failure()
        run: docker compose -f local.yml down

  pylint:
    name: PyLint
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Generate .django_unsafe
        run: |
          touch .envs/.local/.django_unsafe
          echo "DO_SPACE_DATA_KEY=test" >> .envs/.local/.django_unsafe
          echo "DO_SPACE_DATA_SECRET=test" >> .envs/.local/.django_unsafe
          echo "COMICVINE_API_KEYS=test" >>  .envs/.local/.django_unsafe

      - name: Build the Stack
        run: docker compose -f local.yml build

      - name: set pipefail
        run: set -o pipefail

      - name: Run pylint silent
        if: ${{ inputs.silent_linters }}
        run: docker compose -f local.yml run --rm django pylint read_comics --output-format=parseable | tee pylint.txt

      - name: Run pylint
        if: ${{ !inputs.silent_linters }}
        run: |
          set -o pipefail
          docker compose -f local.yml run --rm django pylint read_comics --output-format=parseable | tee pylint.txt

      - name: reset pipefail
        if: success() || failure()
        run: set +o pipefail

      - name: Upload pylint report
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: pylint_report
          path: pylint.txt

      - name: Tear down the Stack
        if: success() || failure()
        run: docker compose -f local.yml down
